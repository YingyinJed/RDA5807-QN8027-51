C51 COMPILER V9.55   RDA5807                                                               01/02/2021 06:06:31 PAGE 1   


C51 COMPILER V9.55, COMPILATION OF MODULE RDA5807
OBJECT MODULE PLACED IN .\Objects\RDA5807.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Listings\RDA5807\RDA5807.C OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Listings\I2
                    -C;.\Listings\MAIN;.\Listings\RDA5807;.\Listings\System;.\Listings\NUMLED) DEBUG OBJECTEXTEND PRINT(.\Listings\RDA5807.ls
                    -t) OBJECT(.\Objects\RDA5807.obj)

line level    source

   1          //影隐劫
   2          #include "RDA5807.h"
   3          
   4          unsigned int gChipID = 0;                       //芯片ID号
   5          unsigned char  RDA5807P_REGW[10];       //寄存器
   6          
   7          unsigned char code RDA5807N_initialization_reg[]={
   8          #if defined(_SHARE_CRYSTAL_24MHz_)
                  0xC0, 0x51, //02H:
              #elif defined(_SHARE_CRYSTAL_12MHz_)
                  0xC0, 0x11, //02H:
              #elif defined(_SHARE_CRYSTAL_32KHz_)
  13              0xC0, 0x01, //02H:                  //02H寄存器第10位必须为1
  14                  //0xD0, 0x01, //02H:    //开启增强低音
  15          #else
                  0xC0, 0x01,
              #endif
  18              0x00, 0x00,
  19              0x04, 0x00,
  20              0xC6, 0xad, //05h
  21              0x60, 0x00,
  22              0x42, 0xC6,
  23              0x00, 0x00,
  24              0x00, 0x00,
  25              0x00, 0x00,  //0x0ah
  26              0x00, 0x00,
  27              0x00, 0x00,
  28              0x00, 0x00,
  29              0x00, 0x00,
  30              0x00, 0x00,
  31              0x00, 0x00,  //0x10h
  32              0x00, 0x19,
  33              0x2a, 0x11,
  34              0xB0, 0x42,  
  35              0x2A, 0x11,  
  36              0xb8, 0x31,  //0x15h 
  37              0xc0, 0x00,
  38              0x2a, 0x91,
  39              0x94, 0x00,
  40              0x00, 0xa8,
  41              0xc4, 0x00,  //0x1ah
  42              0xF7, 0xcF,   
  43              0x2A, 0xDC,  //0x1ch
  44              0x80, 0x6F, 
  45              0x46, 0x08,
  46              0x00, 0x86,
  47              0x06, 0x61, //0x20H
  48              0x00, 0x00,
  49              0x10, 0x9E,
  50              0x23, 0xC8,
  51              0x04, 0x06,
  52              0x0E, 0x1C, //0x25H
  53          };
C51 COMPILER V9.55   RDA5807                                                               01/02/2021 06:06:31 PAGE 2   

  54          
  55          /*******************************************************************************
  56          * 函数名         :OperationRDAFM_2w()[内部使用]
  57          * 函数功能       :读或者写数据到RDA5807
  58          * 输入           :operation   ―― 功能选择"读READ/写WRITE"
  59                            datas       ―― 读或写的数据指针"
  60                            numBytes    ―― 需要读或写numBytes个字节
  61          * 输出           :无
  62          *******************************************************************************/
  63          unsigned char OperationRDAFM_2w(unsigned char operation,unsigned char *datas,unsigned char numBytes)
  64          {
  65   1          unsigned char j;
  66   1              unsigned char acknowledge = 0;
  67   1          IIC_Start();
  68   1          if(operation == READ)
  69   1          { acknowledge = IIC_Write_Byte(ADRR);}//写IIC读地址
  70   1              else
  71   1          {acknowledge = IIC_Write_Byte(ADRW);}//写IIC写地址
  72   1          for(j = 0; j < numBytes; j++, datas++)
  73   1          {
  74   2              if(operation == READ){
  75   3                              if(j == (numBytes -1))
  76   3                              { *datas = IIC_Read_Byte(IIC_NACK); } 
  77   3                              else
  78   3                              {*datas = IIC_Read_Byte(IIC_ACK);} 
  79   3                      }
  80   2              else
  81   2              { acknowledge = IIC_Write_Byte(*datas); }
  82   2          }
  83   1          IIC_Stop();
  84   1              return acknowledge;
  85   1      }
  86          /*******************************************************************************
  87          * 函数名         :RDA5807P_Intialization()
  88          * 函数功能       :初始化RDA5807
  89          * 输入           :无
  90          * 输出           :无
  91          *******************************************************************************/
  92          bit RDA5807P_Intialization(void)
  93          {
  94   1          unsigned char error_ind = 0;
  95   1              unsigned char RDA5807P_REGR[10]={0x0};
  96   1          unsigned char i = 0;      
  97   1      
  98   1          RDA5807P_REGW[0] = 0x00;//软件复位指令
  99   1          RDA5807P_REGW[1] = 0x02;    
 100   1          //写入复位信号
 101   1          error_ind = OperationRDAFM_2w(WRITE, (unsigned char *)&RDA5807P_REGW[0], 2);
 102   1          Delay_Ms_(50);
 103   1          //复位后读取寄存器信息
 104   1          error_ind = OperationRDAFM_2w(READ, (unsigned char *)&RDA5807P_REGR[0], 10);
 105   1          Delay_Ms_(50);
 106   1          //通过移位完全获得芯片号
 107   1          gChipID = RDA5807P_REGR[8];
 108   1          gChipID = ((gChipID << 8) | RDA5807P_REGR[9]);
 109   1          printf("-----gChipID = %x-----\n",gChipID);
 110   1          if(gChipID == 0x5808){  //RDA5807N
 111   2              for (i = 0; i < 8; i++){
 112   3                  RDA5807P_REGW[i] = RDA5807N_initialization_reg[i];
 113   3                      }
 114   2              error_ind = OperationRDAFM_2w(WRITE, (unsigned char *)&RDA5807N_initialization_reg[0], 2);
 115   2              Delay_Ms_(600); 
C51 COMPILER V9.55   RDA5807                                                               01/02/2021 06:06:31 PAGE 3   

 116   2                  error_ind = OperationRDAFM_2w(WRITE, (unsigned char *)&RDA5807N_initialization_reg[0], sizeof(RDA5807
             -N_initialization_reg));
 117   2          }
 118   1          Delay_Ms_(50);
 119   1          if(error_ind){      //ACK=0, NACK=1
 120   2                 return 0;
 121   2              }
 122   1              else{
 123   2                 return 1;
 124   2              }
 125   1      }
 126          /*******************************************************************************
 127          * 函数名         :RDA5807P_FreqToChan()[内部使用]
 128          * 函数功能       :把频率值转换成信道值,例如：频率107.3MHz，frequency = 10730，转换成信道值为203
 129          * 输入           :需要转化的频率值
 130          * 输出           :对应的信道值
 131          *******************************************************************************/
 132          unsigned int RDA5807P_FreqToChan(unsigned int frequency) 
 133          {
 134   1              unsigned char channelSpacing;
 135   1              unsigned int bottomOfBand;
 136   1              unsigned int channel;
 137   1      
 138   1              if ((RDA5807P_REGW[3] & 0x0c) == 0x00){ //03H寄存器低八位第2、3位都为0，波段选择 = 87~108MHz
 139   2                      bottomOfBand = 8700;
 140   2              }
 141   1              else if ((RDA5807P_REGW[3] & 0x0c) == 0x04){
 142   2                      bottomOfBand = 7600;
 143   2              }
 144   1              else if ((RDA5807P_REGW[3] & 0x0c) == 0x08){
 145   2                      bottomOfBand = 7600;    
 146   2              }
 147   1              if ((RDA5807P_REGW[3] & 0x03) == 0x00){ //03H寄存器低八位第0、1位都为0，频率间距 = 100KHz
 148   2                      channelSpacing = 10;
 149   2              }
 150   1              else if ((RDA5807P_REGW[3] & 0x03) == 0x01){
 151   2                      channelSpacing = 10;
 152   2              }
 153   1              else if ((RDA5807P_REGW[3] & 0x03) == 0x02){ 
 154   2                      channelSpacing = 5;
 155   2              }
 156   1              channel = (frequency - bottomOfBand) / channelSpacing;
 157   1              return (channel);
 158   1      }
 159          /*******************************************************************************
 160          * 函数名         :RDA5807P_SetFreq(int curFreq)
 161          * 函数功能       :设置频率
 162          * 输入           :需要设置的频率值
 163          * 输出           :无
 164          *******************************************************************************/
 165          void RDA5807P_SetFreq(int curFreq)
 166          {   
 167   1              unsigned int curChan;
 168   1              
 169   1              curChan = RDA5807P_FreqToChan(curFreq);
 170   1              
 171   1              //SetNoMute
 172   1              RDA5807P_REGW[0] |=     1 << 7;
 173   1              RDA5807P_REGW[2] = curChan >> 2;
 174   1              RDA5807P_REGW[3] = (((curChan & 0x0003) << 6) | 0x10) | (RDA5807P_REGW[3] & 0x0f);      //调谐启用
 175   1              
 176   1              OperationRDAFM_2w(WRITE, &(RDA5807P_REGW[0]), 4);
C51 COMPILER V9.55   RDA5807                                                               01/02/2021 06:06:31 PAGE 4   

 177   1              Delay_Ms_(50);     //Delay 50 ms
 178   1      }
 179          /*******************************************************************************
 180          * 函数名         :unsigned int RDA5807P_GetSigLvl(void)
 181          * 函数功能       :返回当前信号强度
 182          * 输入           :无
 183          * 输出           :当前信号强度，0~127
 184          *******************************************************************************/
 185          unsigned int RDA5807P_GetSigLvl(void)
 186          {    
 187   1          unsigned char RDA5807P_reg_data[4]={0};     
 188   1              unsigned int rssi;
 189   1              
 190   1              OperationRDAFM_2w(READ, &(RDA5807P_reg_data[0]), 4);
 191   1              Delay_Ms_(50);    //Dealy 50 ms
 192   1              
 193   1              rssi = (RDA5807P_reg_data[2] >> 1) & 0x7F;
 194   1          return rssi;  //返回RSSI
 195   1      }
 196          /*******************************************************************************
 197          * 函数名         :void RDA5807P_SetVolumeLevel(unsigned char level)
 198          * 函数功能       :设置FM音量，0~15
 199          * 输入           :需要设置的音量值0~15
 200          * 输出           :无
 201          *******************************************************************************/
 202          void RDA5807P_SetVolumeLevel(unsigned char level)
 203          {
 204   1          unsigned char RDA5807P_reg_data[8];
 205   1          unsigned char i = 0;
 206   1              //uint16 temp;
 207   1      
 208   1          for(i = 0; i < 8; i++){
 209   2              RDA5807P_reg_data[i] = RDA5807P_REGW[i];
 210   2              }
 211   1      
 212   1          RDA5807P_reg_data[7] = (( RDA5807P_reg_data[7] & 0xf0 ) | (level & 0x0f)); 
 213   1          
 214   1          RDA5807P_reg_data[3] &= (~(0x10));
 215   1      
 216   1              OperationRDAFM_2w(WRITE, &(RDA5807P_reg_data[0]), 8);
 217   1          Delay_Ms_(50);    //Dealy 50 ms
 218   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    529    ----
   CONSTANT SIZE    =    110    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      31
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
